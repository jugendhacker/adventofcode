name: CI
on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Setup go
        uses: actions/setup-go@v2

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Run Tests
        run: go test -v -cover -covermode=count -coverprofile=coverage.out ./...

      - name: Convert Coverage
        uses: jandelgado/gcov2lcov-action@v1.0.7

      - name: Coveralls
        uses: coverallsapp/github-action@v1.1.2
        with:
          github-token: ${{ secrets.github_token }}
          path-to-lcov: coverage.lcov

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    needs: test
    steps:
      - name: Setup go
        uses: actions/setup-go@v2

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build
        run: go build -v .

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: 2020*

  upload:
    name: Upload
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2

      - name: Get Timestamp
        uses: srfrnk/current-time@v1.1.0
        id: current-time
        with:
          format: X

      - name: Create Release
        uses: actions/create-release@v1
        id: create-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.current-time.outputs.formattedTime }}
          release_name: Release ${{ steps.current-time.outputs.formattedTime }}
          draft: false
          prerelease: true

      - name: Upload Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: build/2020.exe
          asset_name: adventofcode-windows.exe
          asset_content_type: application/x-dosexec

      - name: Upload Artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: build/2020
          asset_name: adventofcode-linux
          asset_content_type: application/x-executable

